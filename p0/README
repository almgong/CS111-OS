#README

#Quick overview of files:
	1. lab0.c - C source file with program
	2. Makefile - standard makefile with targets as outlined in spec.
	3. README - this file, detailing my project0
	4. segfault_backtrace_nobp.png: image of taking segfault and backtrace
	5. segfault_withbp_inspect.png: image of creating breakpoint and inspecting
		null pointer (0).


#How I designed my smoke-test:

The main idea was to create a simple test that would give me enough
subjective guarentee that my program would pass the grading script. I first
handled the situtation of correct input and output redirection with a test file,
and took the diff to ensure correctness of copy. I then wrote a multi-part error
code checking test that tested each combination of options to the extent to cover
all possible exit codes as described in the spec.

#Assumptions:

My program reads and writes 500 bytes at a time, so for a very large file,
expect some wait time!

In the makefile, the target dist assumes that the necessary files exist in
the directory Makefile is in. Specifically: lab0.c, Makefile, README, and the
two images required by the spec.

The target clean assumes that no other files will be generated in the same 
directory OTHER than the files generated by any target in my Makefile.

I also ignore or skip invalid options passed into the program, and the program
otherwise assumes valid input as outlined in the specification.

#Outside sources

Since I was and still am not too comfortable with bash, I read a tutorial at:
http://teaching.idallen.com/dat2330/04f/notes/exit_status.txt to help with
writing bash commands in my Makefile.

Other than this, I read the linux man pages for help with functions.